고객구분
  일반고객
  관리자

-user의 종류
 1. 일반고객
   - 로그인
   - 로그아웃
   - 상품보기
   - 주문하기
   - 주문내역보기
   - 장바구니담기
   - 장바구니 보기
       -주문하기
       -나가기
 
 2. 관리자
 
---------------------------------------------------------

 1) 로그인
    - Session : User를 뜻함(로그인된 사용자)
    - SessionSet : User를 저장하는 객체(로그인이 되면 SessionSet객체안에 있는 Set에 Session을 저장한다)


2) 로그아웃
    - SessionSet객체안의 Set에서 현재 Session을 찾아 제거한다.


3) 상품
    - Goods의 모든 정보를 검색한다.
       : Goods정보가 없으면 NotFoundException을 발생시킨다.

4) 주문하기
    - 주문상품번호, 주문수량, 배송지를 입력받는다.
    - 주문자id, 배송지 : Orders
    - 상품번호, 주문수량 : OrderLine
         Orders orders = new Orders(0, null, userId, address, 0);
         OrderLine orderLine = new OrderLine(0, 0, goodsId, 0, qty, 0);
         orders.getOrderLineList().add(orderLine);

    - Orders 테이블에 insert 한다.
      Oorder_line 테이블에 insert한다.
      Goods 테이블의 stock를  주문수량만큼 감소시킨다.

5) 주문내역보기
    - 현재 userId를 전달하여 userId에 해당하는 주문내역 검색한다.
      Orders테이블에서 데이터를 검색하고 
      OrderLine테이블에 주문번호에 해당하는 상세정보 검색한다.

6) 장바구니 담기
   - 상품번호와 수량 입력받는다.
   - 상품번호에 해당하는 Goods 정보를 가져온다.
   - 현재 로그인 된 사용자를 SessionSet에서 Session을 찾는다.
   - Session 내부의 Map에 저장되어 있는 "cart"라는 이름의 정보가 있는지 검색한후 없으면 추가 ( session.setAttribute("cart", cart); )
   - cart 안에 Goods 정보가 있는지를 체크하여 있으면 기존 수량에 현재수량을 합친다.
     없으면 새로 저장한다.  
   
7) 장바구니 보기
   - Session 내부에서 cart에 해당하는 정보를 찾아서 화면에 출력한다.
        SessionSet ss = SessionSet.getInstance();
		Session session = ss.get(id);
		Map<Goods,Integer> cart = (Map<Goods, Integer>) session.getAttribute("cart");
    - 출력 한후
         "1.주문하기  |  9.나가기" 메뉴를 출력한다.
         
          :주문하기를  하면  배송지를 입력받는다.
          : 주문하기를 위해서 Order객체 주문에 대한 정보들을 저장한다.
          : 저장된 주문정보 객체를 가지고 주문하기로 이동한다.
          : 주문이 완료된후 장바구니기를 제거한다. -session.removeAttribute("cart");
          
             System.out.print("배송주소 : ");
			 String address = sc.nextLine();
			
			 Orders orders = new Orders(0, null, id, address, 0);
			 List<OrderLine> orderLineList = orders.getOrderLineList();
			 for(Goods goodsKey : cart.keySet()) {
				 int qty = cart.get(goodsKey);
				 OrderLine orderLine = new OrderLine(0, 0, goodsKey.getGoodsId() , 0, qty, 0);
				 orderLineList.add(orderLine);
			 }
			 System.out.println("orderLineList 개수 : " + orderLineList.size());
			 OrderController.insertOrders(orders);
			 
			 //장바구니비우기
			 SessionSet ss = SessionSet.getInstance();
			 Session session = ss.get(id);
			 session.removeAttribute("cart");
   